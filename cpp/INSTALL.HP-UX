======================================================================
Unsupported Platform
======================================================================

Ice is no longer supported on HP-UX. The following instructions are 
believed to be correct, but are provided without any guarantee.

======================================================================
Requirements
======================================================================


Operating System
----------------

HP-UX 11i (11.11) on PA-RISC.

You also need the "HP-UX Strong Random Number Generator", available
for free from http://software.hp.com.


C++ compiler
------------

HP aC++ A.03.56

More recent versions of aC++ are likely to work as well.


C compiler
----------

HP C/ANSI C compiler (cc).


Third-party libraries
---------------------

Ice has dependencies on a number of third-party libraries:

- Berkeley DB 4.6.21
- expat 1.95.7 or 2.0.0
- OpenSSL 0.9.7 or later (OpenSSL 0.9.8 or later recommended)
- bzip2 1.0.x
- mcpp 2.7.2

We recommend downloading the Ice third-party source archive from

  http://www.zeroc.com/download.html

This archive contains the source distributions for each of the
third-party dependencies, as well as required source patches and 
configuration instructions.

For more information about these dependencies, please refer to
the links below:

Berkeley DB    http://www.oracle.com/database/berkeley-db/index.html
expat          http://expat.sourceforge.net
OpenSSL        http://www.openssl.org
bzip2          http://sources.redhat.com/bzip2
mcpp           http://mcpp.sourceforge.net
  

GNU Make 3.80
-------------

GNU Make 3.80 is required to build Ice on HP-UX. You can download GNU
Make from the "Software Porting And Archive Centre for HP-UX",
http://hpux.cs.utah.edu.




======================================================================
Compilation and Testing
======================================================================

Extract the Ice archive in any directory you like (for example, in
your home directory):

$ gunzip -c Ice-@ver@.tar.gz | tar xvf -

Change the working directory to Ice-@ver@/cpp:

$ cd Ice-@ver@/cpp

Edit config/Make.rules to establish your build configuration. The
comments in the file provide more information. Pay particular
attention to the variables that define the locations of the third-
party libraries.

Now you're ready to build Ice:

$ gmake

This will build the Ice core libraries, services, tests and examples.

Python is required to run the test suite:

  http://www.python.org/download

After a successful build, you can run the test suite:

$ gmake test

This is equivalent to:

$ python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos, make sure to update your PATH
environment variable to add the "bin" directory, and your SHLIB_PATH
environment variable to add the "lib" directory. For 64-bit builds,
add "lib" to LD_LIBRARY_PATH:

$ export PATH=`pwd`/bin:$PATH
$ export SHLIB_PATH=`pwd`/lib:$SHLIB_PATH
$ export LD_LIBRARY_PATH=`pwd`/lib:$LD_LIBRARY_PATH


======================================================================
64-bit builds
======================================================================

To build Ice in 64-bit mode, you need to:

- Obtain or build all the third-party dependencies, and put the 64-bit
  libraries in the "lib/pa20_64" directories. For example, put
  Berkeley DB 64-bit libraries in $DB_HOME/lib/pa20_64.

- Set the environment variable LP64 to yes, as shown below:

  $ export LP64=yes

- Build and test as described above.


======================================================================
IPv6 Multicast
======================================================================

Unlike on other platforms, interface indexes cannot be used to
configure the interface to use for a IPv6 multicast endpoint. Instead 
the IP address must be used instead.


======================================================================
Installation
======================================================================

Simply run "gmake install". This will install Ice in the directory
specified by the "prefix" variable in config/Make.rules.

After installation, make sure that the <prefix>/bin directory is in
your PATH, and the <prefix>/lib directory is in your SHLIB_PATH. When
compiling Ice programs, you must pass the location of the
<prefix>/include directory to the compiler with the -I option, and the
location of the <prefix>/lib directory with the -L option.

If you built in 64-bit mode, the libraries are installed in
<prefix>/lib/pa20_64 and the binaries are installed in 
<prefix>/bin/pa20_64. No other changes are necessary.

======================================================================
Usage
======================================================================

Ice is built with _XOPEN_SOURCE and _XOPEN_SOURCE_EXTENDED defined;
therefore all Ice-based programs need to be linked with -lxnet.
