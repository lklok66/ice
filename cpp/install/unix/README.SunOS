======================================================================
The Internet Communications Engine
======================================================================

Ice is a modern alternative to object middleware such as CORBA or
COM/DCOM/COM+. It is easy to learn, yet provides a powerful network
infrastructure for demanding technical applications. It features an
object-oriented specification language, easy to use C++, Java, Python,
PHP, C#, and Visual Basic mappings, a highly efficient protocol,
asynchronous method invocation and dispatch, dynamic transport
plug-ins, TCP/IP and UDP/IP support, SSL-based security, a firewall
solution, and much more.

Ice is available under the terms of the GNU General Public License
(GPL) (see LICENSE file). Commercial licenses are available for
customers who wish to use Ice with proprietary products. Please
contact sales@zeroc.com for more information about licensing Ice.


======================================================================
About this distribution
======================================================================

This distribution is a binary release of Ice @ver@ for Solaris 9 on
SPARC and includes the following components:

- The Ice runtime, including executables for the Ice services, HTML
  documentation and Slice files.

- Run time libraries for C++, Java, and Python. These libraries enable
  you to execute Ice applications.

- Tools and libraries for developing Ice applications.


======================================================================
Requirements
======================================================================

This binary distribution was compiled on Solaris 9 using Sun CC
version 5.4.

The following Solaris 9 binary packages, available from
http://www.sunfreeware.com, are required to use this distribution:

- expat 1.95.5
- openssl 0.9.7e
- libgcc 3.3

You also need the bzip2 library version 1.0.2:

 - install the SUNWbzip package from the Solaris 9 distribution
   (it may already be installed)
 - apply Sun patch #114586-01 to obtain bzip2 1.0.2. 


Java
----

Ice for Java requires J2SE 1.4.2 or 1.5.0. RPMs can be obtained from
JavaSoft at http://www.javasoft.com/j2se


Python
------

The Ice extension for Python included in this distribution requires
Python 2.3.3. It was built using the python 2.3.3 binary package from
http://www.sunfreeware.com. If you prefer to use Python 2.4, you can
download the Ice for Python source code from the ZeroC web site at
http://www.zeroc.com/download.html.


======================================================================
Berkeley DB
======================================================================

This distribution includes the C++ and Java runtime for Berkeley DB
4.2.52. The C++ runtime was built using Sun CC version 5.4. The
Berkeley DB license is provided in the file THIRD_PARTY_LICENSE.


======================================================================
64 bit builds
======================================================================

This distribution only contains 32-bit binaries. If you need a 64-bit
version, you can download the Ice sources from the ZeroC web site at
http://www.zeroc.com/download.html and build Ice in 64-bit mode. See
the INSTALL.SOLARIS file of the source distribution for more details.


======================================================================
Setting up your environment to use Ice
======================================================================


General
-------

The discussion below assumes you have defined the ICE_HOME variable
with the directory of your Ice installation.

In order to use Ice services and tools such as Slice translators, you
need to add $ICE_HOME/bin to your PATH and $ICE_HOME/lib to your
LD_LIBRARY_PATH, as shown in the bash commands below:

$ export PATH=$ICE_HOME/bin:$PATH
$ export LD_LIBRARY_PATH=$ICE_HOME/lib:$LD_LIBRARY_PATH


C++
---

When compiling Ice for C++ programs, you must pass $ICE_HOME/include
to the compiler with the -I option, and $ICE_HOME/lib with the -L
option. Furthermore, a C++ program needs to link with at least libIce
and libIceUtil, so a typical link command would look like this:

$ CC -o myprogram myprogram.o -L$ICE_HOME/lib -lIce -lIceUtil

Additional libraries are necessary if you are using an Ice service
such as IcePack or Glacier2.


Java
----

To use Ice for Java, you must add $ICE_HOME/lib/Ice.jar and
$ICE_HOME/lib/db.jar to your CLASSPATH, as shown below:

$ export CLASSPATH=$ICE_HOME/lib/Ice.jar:$ICE_HOME/lib/db.jar:$CLASSPATH


Python
------

To use Ice for Python, the PYTHONPATH environment variable must be
updated so that the interpreter can load the Ice extension and
supporting Python files:

$ export PYTHONPATH=$ICE_HOME/python:$ICE_HOME/lib:$PYTHONPATH


======================================================================
Demos and documentation
======================================================================

Sample programs are provided in the Ice-@ver@-demos.tar.gz package,
which can be downloaded from the ZeroC web site at

http://www.zeroc.com/download.html

Please refer to the README.DEMOS file included in that package for
more information.

See doc/README.html for information on the documentation included with
this distribution.
