======================================================================
Requirements
======================================================================


Windows version
---------------

Ice-E has been extensively tested on:

- Windows XP x86
- Windows Vista x86 and x64
- Windows Mobile 6 (ARMV4I)


C++ compiler
------------

The following C++ compilers are supported:

- Microsoft Visual C++ 2008 Professional

- Microsoft Visual C++ 2005 SP1 Professional

  Service Pack 1 is available for download from:

  http://msdn2.microsoft.com/en-us/vstudio/bb265237.aspx


Windows Mobile 6 SDK
--------------------

Ice-E requires either the Windows Mobile 6 Professional or Standard
SDK to be installed. Both of these can be obtained from:

  http://www.microsoft.com/downloads/details.aspx?FamilyId=06111A3A-A651-4745-88EF-3D48091A390B&displaylang=en

The SDK must be installed after you install the Visual C++ compiler.


Slice-to-Embedded-C++ translator
--------------------------------

You will need the Slice-to-Embedded-C++ translator (slice2cppe). You
can download a binary distribution from the ZeroC web site, or you
can build the Slice-to-Embedded-C++ translator yourself using this
source distribution.

Binary distributions are available at

  http://www.zeroc.com/icee/download.html


Third-party libraries
---------------------

The Ice-E slice compiler (slice2cppe) has a dependency on the
following third-party library:

- mcpp 2.7.1

If you want to build the slice2cppe translator yourself, you can
avoid building mcpp from source code by downloading ZeroC's
Third-Party Windows installer for Visual Studio 2005/2008 that
contains release and debug libraries for all of the third-party
dependencies.

If you intend to build the third-party dependencies from source, we
recommend downloading the Ice third-party source archive from

  http://www.zeroc.com/download.html

This archive contains the source distributions for each of the
third-party dependencies, as well as required source patches and
configuration instructions.

For more information about mcpp, please refer to the link below:

  http://mcpp.sourceforge.net


======================================================================
Compilation and Testing
======================================================================

Using your favorite Zip tool, unzip the Ice-E source archive anywhere
you like.

Open a "Visual Studio Command Prompt" for your compiler and change the
working directory to IceE-@ver@. For example:

  > cd C:\IceE-@ver@

Edit cppe\config\Make.rules.mak to establish your build configuration.
The comments in the file provide more information. In particular, you
must ensure that CPP_COMPILER is set appropriately for your environment.
For Windows Mobile, you must ensure that WINDOWS_MOBILE_SDK is set
properly.

Now you're ready to build Ice-E:

  > nmake /f Makefile.mak configure
  > nmake /f Makefile.mak

Python is required to run the test suite on Windows:

  http://www.python.org/download

After a successful build, you can run the test suite:

  > nmake /f makefile.mak test

This is equivalent to:

  > python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos and you did not build Ice-E
statically, make sure to update your PATH environment variable to add
the "bin" directory that contains the Ice-E DLLs.

For Windows Mobile, you must manually run each test by copying the
server and client for each test to your hardware and then running the
server, followed by the client. Any failures will be reported.


======================================================================
Installation
======================================================================

Simply run "nmake /f Makefile.mak install". This will install Ice-E in
the directory specified by the "prefix" variable in the
cpp\config\Make.rules.mak (for slice compiler) and
cppe\config\Make.rules.mak (for rest of Ice-E) files.

After installation if you plan to use the Visual Studio IDE for your
Ice-E project, make sure to add the bin directory to the Visual C++
"Executable files", the include directory to the "Include files" and
the lib directory to the "Library files" in the IDE
(Tools->Options->Projects and Solutions->VC++ Directories).
