{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\vieww12000\viewh15840\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs24 \cf0 Double-click Ice Xcode Plugin.mpkg to install the Ice/IceTouch Xcode plugin.\
\
======================================================================\
Requirements\
======================================================================\
\
Compiler\
--------\
\
The Xcode plugin requires:\
\
- Xcode 3.1.2 or later.\
\
\
======================================================================\
Configuring the Xcode plug-in\
======================================================================\
\
The Xcode plugin simplifies the process of building Ice and Ice Touch\
applications with Xcode.\
\
The Xcode plug-in provides the following features:\
\
  - Handles all aspects of translating your Slice files for both\
    Objective-C and C++ projects.\
  - Incrementally recompiles Slice files after modifications\
  - Maintains dependencies between Slice files\
  - Highlights compilation errors in your source code\
\
The Xcode plug-in is configured using the per-target info build\
settings, just as you would configure the compiler settings. Select a\
target, press info (or Cmd-i), select the build tab, and enter "Slice"\
in the "Search in Build Settings" field.\
\
The following fields are defined:\
\
- Header Search Path\
\
   Set the list of directories to search for included Slice files\
   (-I option). Note that the Ice Slice files are automatically in the\
   header search path.\
\
- Ice Home\
\
  If you are building with the Ice Touch Xcode SDK, this should left\
  unset; otherwise, if using the command line toolkit or regular Ice,\
  set this to the location of the installation (ie: /opt/Ice-3.3.1, or\
  /opt/IceTouch-1.0)\
\
- Permit `Ice' prefix\
\
  Pass --ice to the Slice compiler.\
\
- Streaming support\
\
  Pass --stream to the Slice compiler (C++ only).\
\
- Checksum support\
\
  Pass --checksum to the Slice compiler (C++ only).\
\
- Preprocessor Macros\
\
  Set the list of preprocessor macros to define (-D option).\
\
- Translate C++ code\
\
  If set, slice2cpp will be used to translate the Slice files,\
  otherwise slice2objc is used.\
\
You may set specific Slice compiler flags on individual source Slice\
files by selecting the Slice file, press info (or Cmd-i), selecting\
the build tab and entering any desired flags in "Additional Compiler\
Flags for Target".\
}