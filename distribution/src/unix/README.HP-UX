======================================================================
The Internet Communications Engine
======================================================================

Ice is a modern alternative to object middleware such as CORBA or
COM/DCOM/COM+. It is easy to learn, yet provides a powerful network
infrastructure for demanding technical applications. It features an
object-oriented specification language, easy to use C++, .NET, Java,
Python, Ruby, PHP, and Visual Basic mappings, a highly efficient
protocol, asynchronous method invocation and dispatch, dynamic
transport plug-ins, TCP/IP and UDP/IP support, SSL-based security, a
firewall solution, and much more.

Ice is available under the terms of the GNU General Public License
(GPL) (see LICENSE file). Commercial licenses are available for
customers who wish to use Ice with proprietary products. Please
contact sales@zeroc.com for more information about licensing Ice.


======================================================================
About this distribution
======================================================================

This distribution is a binary release of Ice @ver@ for HP-UX 11i on
PA-RISC and includes the following components:

- The Ice run time, including executables for the Ice services and 
  Slice files.

- Run time libraries for C++. These libraries enable you to execute
  Ice applications.

- Tools and libraries for developing Ice applications.


======================================================================
Requirements
======================================================================

This binary distribution was compiled on HP-UX 11.11 using HP aC++
version A.03.56.

The following HP-UX 11i binary packages, available from
http://hpux.cs.utah.edu, are required to use this distribution:

- bzip2 1.0.3
- expat 2.0.0


======================================================================
Berkeley DB and OpenSSL
======================================================================

This distribution includes the C++ run time for Berkeley DB 4.6.21 and
the OpenSSL 0.9.8g libraries. The Berkeley DB C++ run time was built
using HP aC++ version A.03.56. The Berkeley DB and OpenSSL licenses
are provided in the file THIRD_PARTY_LICENSE.


======================================================================
64-bit builds
======================================================================

This distribution only contains 32-bit binaries. If you need a 64-bit
version, you can download the Ice sources from the ZeroC web site at
http://www.zeroc.com/download.html and build Ice in 64-bit mode. See
the INSTALL.HP-UX file of the source distribution for more details.


======================================================================
IPv6 Multicast
======================================================================

Unlike on other platforms, interface indexes cannot be used to 
configure the interface to use for a IPv6 multicast endpoint. Use 
instead the IP address.


======================================================================
Setting up your environment to use Ice
======================================================================


General
-------

In order to use Ice services and tools such as Slice translators, you
need to add the location of the Ice binaries to your PATH, as shown in
the bash command below:

$ export PATH=<Ice installation directory>/bin:$PATH

Ice shared libraries and executables in this distribution contain 
/opt/Ice-@mmver@/lib as the embedded runpath. In order to run Ice
services and tools, you can do one of the following:

 - Create a symbolic link /opt/Ice-@mmver@ that points to your Ice
   installation:

   $ ln -s <Ice installation directory> /opt/Ice-@mmver@

 - Add the Ice lib directory to your SHLIB_PATH environment variable:

   $ export SHLIB_PATH=<Ice installation directory>/lib:$SHLIB_PATH


C++
---

When compiling Ice for C++ programs, you must pass the Ice include
directory to the compiler with the -I option, and the Ice library
directory with the -L option. Furthermore, a C++ program needs to link
with at least libIce and libIceUtil, so a typical link command would
look like this:

$ aCC -I <Ice installation directory>/include -o myprogram myprogram.o \
  -L<Ice installation directory>/lib -lIce -lIceUtil

Additional libraries are necessary if you are using an Ice service
such as IceGrid or Glacier2.


======================================================================
Demos
======================================================================

Sample programs are provided in the Ice-@ver@-demos.tar.gz package,
which can be downloaded from the ZeroC web site at

  http://www.zeroc.com/download.html

Please refer to the README.DEMOS file included in that package for
more information.


======================================================================
Binary compatibility
======================================================================

Ice patch releases are binary compatible. For example, Ice version
@mmver@.1 is compatible with @mmver@.0: you can run an application built
against Ice @mmver@.0 with Ice @mmver@.1 (or later) without having to
recompile or relink this application.

Please refer to the RELEASE_NOTES file included in this distribution
for detailed upgrade instructions.


======================================================================
Acknowledgments
======================================================================

This product includes software developed by the OpenSSL Project for
use in the OpenSSL Toolkit (http://www.openssl.org/).

This product includes cryptographic software written by Eric Young 
(eay@cryptsoft.com).
