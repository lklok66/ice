Changes since version 3.0.0
---------------------------

- Fixed a bug where Ice plugin command line options were not parsed.

- Fixed a bug in the Slice parser that caused problems if an
  included file contained white space in the file name.

- Added IceGrid, IceStorm and Glacier2 demos.


Changes since version 2.1.2
---------------------------

- IcePy shared library has been moved into the python directory,
  removing the need to add an additional directory to your PYTHONPATH
  environment variable.

- Removed ice_default() method from proxies.

- Added the proxy method ice_connectionId, which allows an application
  to control connection reuse.

- Added the new methods Ice.initializeWithLogger() and
  Ice.initializeWithPropertiesAndLogger(), which ensure that a
  custom logger is used to record any errors during communicator
  initialization.

- Invocations on collocated servants are now supported.

- Added proxy methods to retrieve the proxy adapter id and endpoints
  (ice_getAdapterId() and ice_getEndpoints()) and to create a new
  proxy with a new adapter id or new endpoints (ice_newAdapterId() and
  ice_newEndpoints()).

- Exception stack trace information is now included when possible in
  the 'unknown' member of Ice.UnknownException and its derived types.

- Fixed compilation errors for 64-bit GCC builds.

- Added ice_communicator() to proxies. This function returns the
  communicator that was used to create the proxy.

- Added ice_toString() to proxies. This function returns the
  stringified proxy. This function can be more convenient to use than
  communicator.proxyToString() because you do not need the
  communicator to stringify a proxy that way.

- Ice.ObjectImpl is now an abstract class that cannot be instantiated.
  This change should be transparent to application code.

Changes since version 2.1.1
---------------------------

- Fixed a bug that resulted in an UnmarshalOutOfBoundsException when
  Slice definitions are reloaded.

Changes since version 2.1.0
---------------------------

- Added sequences of fixed-length elements to throughput demo.

- Added -E option to the various Slice compilers to print preprocessor
  output on stdout.

- Fixed a bug in the option parsing for Ice tools such as slice2cpp,
  slice2java, slice2cs, etc. The option parser used to incorrectly
  complain about repeated options when in fact no option was
  repeated. Also changed the parser to permit options to follow an
  argument, so

      slice2cpp -I. x.ice

  and

      slice2cpp x.ice -I.

  are now equivalent.

Changes since version 2.0.0
---------------------------

- Added support for Mac OS X 10.3.x

- Added support for stringifying generated types.

- Added support for Ice::Connection, which is accessible to servants
  from Ice::Current, and to clients from the proxy operation
  ice_connection.

- Added setDefaultContext() and getDefaultContext() to the
  Ice::Communicator interface. This allows a default context to be
  established on a communicator-wide basis. See section 29.9.3 in
  the doc.

  Added ice_defaultContext to Ice::ObjectProxy. This creates a new
  proxy that uses the default context established on the communicator.

- Modified the checkedCast member function of the generated Prx
  classes to accept an optional trailing argument of type Ice::Context.
  This makes it possible to do stateful things that require a context
  in a servant locator's activate() method.
