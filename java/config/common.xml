<!--
 **********************************************************************

 Copyright (c) 2003-2006 ZeroC, Inc. All rights reserved.

 This copy of Ice is licensed to you under the terms described in the
 ICE_LICENSE file included in this distribution.

 **********************************************************************
-->

<project name="common" basedir=".">

    <property environment="env"/>

    <target name="init" depends="config-init">
        <!-- Create the time stamp -->
        <tstamp/>
    </target>

    <!-- Load build configuration properties -->
    <property file="${top.dir}/config/build.properties"/>

    <!-- Determine whether we are using JDK 1.5 -->
    <condition property="java5">
	<equals arg1="${jdk.version}" arg2="1.5"/>
    </condition>

    <!-- Use the global metadata "java:java5" when using JDK 1.5 -->
    <condition property="java5metadata" value="java:java5">
	<isset property="java5"/>
    </condition>
    <condition property="java5metadata" value="">
	<not>
	    <isset property="java5"/>
	</not>
    </condition>

    <!-- Use -Xlint:unchecked when using JDK 1.5 -->
    <condition property="javac.lint" value="-Xlint:unchecked">
	<and>
	    <isset property="java5"/>
	    <istrue value="${lint.unchecked}"/>
	</and>
    </condition>
    <condition property="javac.lint" value="">
	<or>
	    <isfalse value="${lint.unchecked}"/>
	    <not>
		<isset property="java5"/>
	    </not>
	</or>
    </condition>

    <!-- javac doesn't like an empty argument, so we have to disable the use
         of javac.lint when the property is empty -->
    <condition property="javac.lint.compiler" value="bogus">
	<equals arg1="${javac.lint}" arg2=""/>
    </condition>
    <condition property="javac.lint.compiler" value="javac1.5">
	<not>
	    <equals arg1="${javac.lint}" arg2=""/>
	</not>
    </condition>

    <!-- Commonly needed properties -->
    <property name="class.dir" value="classes"/>
    <property name="generated.dir" value="generated"/>

    <!-- Figure out install type -->

    <available file="${top.dir}/makedist.py" property="installtype" value="cvs" />

    <condition property="installtype" value="src">
	<and>
            <available file="${top.dir}/slice"/>
            <not>
                <isset property="installtype"/>
            </not>
	</and>
    </condition>

    <condition property="installtype" value="rpm">
	<and>
	    <available file="/usr/share/slice"/>
            <not>
                <isset property="installtype"/>
            </not>
	</and>
    </condition>

    <condition property="installtype" value="opt">
	<and>
	     <available file="${env.ICE_HOME}/slice" />
            <not>
                <isset property="installtype"/>
	    </not>
	</and>
    </condition>
    
    <fail message="Unable to detect a valid Ice installation." unless="installtype" />

    <condition property="is-cvs">
	<and>
	    <isset property="installtype"/>
	    <equals arg1="cvs" arg2="${installtype}"/>
	</and>
    </condition>

    <condition property="is-opt">
	<and>
	    <isset property="installtype"/>
	    <equals arg1="opt" arg2="${installtype}"/>
	</and>
    </condition>

    <condition property="is-rpm">
	<and>
	    <isset property="installtype"/>
	    <equals arg1="rpm" arg2="${installtype}"/>
	</and>
    </condition>

    <condition property="is-src">
	<and>
	    <isset property="installtype"/>
	    <equals arg1="src" arg2="${installtype}"/>
	</and>
    </condition>

    <condition property="hasProguard">
	<available classname="proguard.ant.ProGuardTask" classpath="${env.CLASSPATH}" />
    </condition>

    <condition property="hasJGoodies">
	<and>
	    <available classname="com.jgoodies.looks.Options" classpath="${env.CLASSPATH}" />
	    <available classname="com.jgoodies.forms.factories.Borders" classpath="${env.CLASSPATH}" />
	</and>
    </condition>

    <condition property="hasProguardAndJGoodies">
	<and>
	    <isset property="hasProguard" />
	    <isset property="hasJGoodies" />
	</and>
    </condition>

    <target name="properties-cvs" if="is-cvs">
        <available file="${env.ICE_HOME}/slice" property="is-cvs-valid"/>
	<fail message="ICE_HOME is not set to a valid directory" unless="is-cvs-valid"/>

	<property name="lib.dir" value="${top.dir}/lib" />
	<property name="slice.dir" value="${env.ICE_HOME}/slice"/>
	<taskdef name="slice2java" classpath="${top.dir}/ant" classname="Slice2JavaTask"/>
	<taskdef name="slice2freezej" classpath="${top.dir}/ant" classname="Slice2FreezeJTask" />

	<!-- Ice classpath -->
	<path id="ice.classpath">
	    <fileset dir="${lib.dir}">
		<include name="Ice.jar"/>
	    </fileset>
	</path>
    </target>

    <target name="properties-opt" if="is-opt">

        <available file="${env.ICE_HOME}/lib" property="opt-lib-avail" />
	<fail message="ICE_HOME is not set to a valid directory" unless="opt-lib-avail"/>

	<property name="lib.dir" value="${env.ICE_HOME}/lib" />
	<property name="slice.dir" value="${env.ICE_HOME}/slice"/>
	<taskdef name="slice2java" classpath="${env.ICE_HOME}/ant" classname="Slice2JavaTask"/>
	<taskdef name="slice2freezej" classpath="${env.ICE_HOME}/ant" classname="Slice2FreezeJTask" />

	<condition property="ice.jar.file" value="${lib.dir}/java5/Ice.jar" else="${lib.dir}/Ice.jar">
	    <and>
		<available file="${lib.dir}/java5/Ice.jar"/>
		<isset property="java5"/>
	    </and>
	</condition>
		  
	<!-- Ice classpath -->
	<path id="ice.classpath">
	    <fileset file="${ice.jar.file}"/>
	</path>
    </target>

    <target name="properties-src" if="is-src">
	<property name="lib.dir" value="${top.dir}/lib" />
	<property name="slice.dir" value="${top.dir}/slice"/>
	<taskdef name="slice2java" classpath="${top.dir}/ant" classname="Slice2JavaTask"/>
	<taskdef name="slice2freezej" classpath="${top.dir}/ant" classname="Slice2FreezeJTask"/>

	<condition property="ice.jar.file" value="${lib.dir}/java5/Ice.jar" else="${lib.dir}/Ice.jar">
	    <and>
		<available file="${lib.dir}/java5/Ice.jar"/>
		<isset property="java5"/>
	    </and>
	</condition>

	<!-- Ice classpath -->
	<path id="ice.classpath">
	    <fileset file="${ice.jar.file}"/>
	    <fileset file="${lib.dir}/db.jar"/>
	</path>
    </target>

    <target name="properties-rpm" if="is-rpm">
	<property name="lib.dir" value="/usr/lib/Ice-ICE_VERSION" />
	<property name="slice.dir" value="/usr/share/slice"/>
	<taskdef name="slice2java" classpath="${lib.dir}/ant" classname="Slice2JavaTask"/>
	<taskdef name="slice2freezej" classpath="${lib.dir}/ant" classname="Slice2FreezeJTask"/>

	<condition property="ice.jar.file" value="${lib.dir}/java5/Ice.jar" else="${lib.dir}/Ice.jar">
	    <and>
		<available file="${lib.dir}/java5/Ice.jar"/>
		<isset property="java5"/>
	    </and>
	</condition>
	
	<!-- Ice classpath -->
	<path id="ice.classpath">
	    <fileset file="${ice.jar.file}"/>
	    <fileset file="/usr/share/java/db.jar"/>
	</path>
    </target>
    
    <target name="config-init" depends="properties-cvs,properties-opt,properties-src,properties-rpm">
    </target>

</project>
