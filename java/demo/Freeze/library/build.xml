<!--
 **********************************************************************

 Copyright (c) 2003-2007 ZeroC, Inc. All rights reserved.

 This copy of Ice is licensed to you under the terms described in the
 ICE_LICENSE file included in this distribution.

 **********************************************************************
-->

<project name="demo_Freeze_library" default="all" basedir=".">

    <!-- set global properties for this build -->
    <property name="top.dir" value="../../.."/>
    
    <!-- import common definitions -->
    <import file="${top.dir}/config/common.xml"/>

    <target name="generate" depends="init">
        <!-- Create the output directory for generated code -->
        <mkdir dir="${generated.dir}"/>
        <slice2java outputdir="${generated.dir}">
	    <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="." includes="Library.ice"/>
        </slice2java>
        <slice2freezej ice="on" outputdir="${generated.dir}">
	    <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/Ice">
                <include name="BuiltinSequences.ice" />
            </fileset>
            <fileset dir="." includes="Library.ice"/>
	    <dict name="StringIsbnSeqDict" key="string" value="Ice::StringSeq"/>
        </slice2freezej>
    </target>

    <target name="compile" depends="generate">
        <mkdir dir="${class.dir}"/>
        <javac srcdir="${generated.dir}" destdir="${class.dir}"
	    source="${jdk.version}" debug="${debug}">
            <classpath refid="ice.classpath"/>
	    <compilerarg value="${javac.lint}" compiler="${javac.lint.compiler}"/>
        </javac>
	<javac srcdir="." destdir="${class.dir}" source="${jdk.version}"
            excludes="generated/**" debug="${debug}">
            <classpath refid="ice.classpath"/>
	    <compilerarg value="${javac.lint}" compiler="${javac.lint.compiler}"/>
        </javac>
    </target>

    <target name="all" depends="compile"/>

    <target name="clean">
        <delete dir="${generated.dir}"/>
        <delete dir="${class.dir}"/>
        <delete>
	    <fileset dir="db" includes="log.*"/>
            <fileset dir="db" includes="authors,books"/>
        </delete>
    </target>

</project>
