<!--
 **********************************************************************

 Copyright (c) 2003-2008 ZeroC, Inc. All rights reserved.

 This copy of Ice is licensed to you under the terms described in the
 ICE_LICENSE file included in this distribution.

 **********************************************************************
-->

<project name="main" default="all" basedir=".">

    <!-- set global properties for this build -->
    <property name="top.dir" value="."/>

    <!-- import common definitions -->
    <import file="config/common.xml"/>

    <property name="generated.test.dir" value="generated.test"/>
    <property name="test.dir" value="test"/>
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="lib${build.suffix}"/>
    <property name="cache.dir" value="depcache${build.suffix}"/>

    <!-- This target cannot depend on init because the tasks may not be compiled yet -->
    <target name="tasks" depends="config-init" if="ice.src.dist">
        <mkdir dir="${lib.dir}/ant"/>
        <javac srcdir="${src.dir}/ant" destdir="${lib.dir}/ant"
            source="1.5"
            includes="**"
            deprecation="on">
            <compilerarg value="${javac.lint}"/>
        </javac>
        <jar jarfile="${lib.dir}/ant-ice.jar" basedir="${lib.dir}/ant">
            <include name="*.class"/>
            <manifest>
                <attribute name="Built-By" value="ZeroC, Inc."/>
            </manifest>
        </jar>
    </target>

    <target name="generate" depends="tasks, task-init">
        <!-- Create the output directory for generated code -->
        <mkdir dir="${generated.dir}"/>
        <slice2java ice="on" stream="on" outputdir="${generated.dir}" dependencyfile="${generated.dir}/.depend.Ice">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/Ice">
                <include name="BuiltinSequences.ice" />
            </fileset>
        </slice2java>
        <slice2java ice="on" outputdir="${generated.dir}" dependencyfile="${generated.dir}/.depend.Ice">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/Ice">
                <include name="Communicator.ice" />
                <include name="Current.ice" />
                <include name="Endpoint.ice" />
                <include name="FacetMap.ice" />
                <include name="ImplicitContext.ice" />
                <include name="Identity.ice" />
                <include name="LocalException.ice" />
                <include name="Locator.ice" />
                <include name="Logger.ice" />
                <include name="ObjectAdapter.ice" />
                <include name="ObjectFactory.ice" />
                <include name="Plugin.ice" />
                <include name="Process.ice" />
                <include name="Properties.ice" />
                <include name="Router.ice" />
                <include name="ServantLocator.ice" />
                <include name="SliceChecksumDict.ice" />
                <include name="Stats.ice" />
                <include name="Connection.ice" />
            </fileset>
        </slice2java>

        <!-- Generate Slice checksums for the Ice services. -->

        <slice2java ice="on" outputdir="${generated.dir}" checksum="Glacier2.SliceChecksums"
            dependencyfile="${generated.dir}/.depend.Glacier2">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/Glacier2">
                <include name="PermissionsVerifier.ice" />
                <include name="SSLInfo.ice" />
                <include name="Router.ice" />
                <include name="Session.ice" />
            </fileset>
        </slice2java>

        <slice2java ice="on" outputdir="${generated.dir}" checksum="IceBox.SliceChecksums"
            dependencyfile="${generated.dir}/.depend.IceBox">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/IceBox">
                <include name="IceBox.ice" />
            </fileset>
        </slice2java>

        <slice2java ice="on" outputdir="${generated.dir}" checksum="IceGrid.SliceChecksums"
            dependencyfile="${generated.dir}/.depend.IceGrid">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/IceGrid">
                <include name="Admin.ice" />
                <include name="Descriptor.ice" />
                <include name="Exception.ice" />
                <include name="FileParser.ice"/>
                <include name="Observer.ice" />
                <include name="Locator.ice" />
                <include name="Query.ice" />
                <include name="Registry.ice" />
                <include name="Session.ice" />
                <include name="UserAccountMapper.ice" />
            </fileset>
        </slice2java>

        <slice2java ice="on" outputdir="${generated.dir}" checksum="IceStorm.SliceChecksums"
            dependencyfile="${generated.dir}/.depend.IceStorm">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="${slice.dir}/IceStorm">
                <include name="IceStorm.ice" />
            </fileset>
        </slice2java>
    </target>

    <target name="ice-compile" depends="generate">
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${cache.dir}"/>
        <depend srcdir="${generated.dir}:${src.dir}" destdir="${lib.dir}" cache="${cache.dir}"/>
        <javac srcdir="${generated.dir}:${src.dir}" destdir="${lib.dir}"
            source="1.5" debug="${debug}"
	    includes="**"
            excludes="ant/**"
	    deprecation="on">
            <compilerarg value="${javac.lint}"/>
        </javac>
    </target>

    <target name="ice-jar" depends="ice-compile">
        <jar jarfile="${lib.dir}/IceAndroid.jar" basedir="${lib.dir}">
            <include name="**/*.class"/>
            <exclude name="test/**"/>
            <exclude name="ant/**"/>
            <exclude name="*.jar"/>
            <manifest>
                <attribute name="Built-By" value="ZeroC, Inc."/>
            </manifest>
        </jar>
    </target>

    <target name="test-generate" depends="tasks, task-init">
        <mkdir dir="${generated.test.dir}"/>
        <!-- Create the output directory for generated code -->
        <slice2java outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="test/Ice/adapterDeactivation">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/binding">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/exceptions">
                <include name="Test.ice" />
                <include name="TestAMD.ice" />
            </fileset>
            <fileset dir="test/Ice/facets">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/faultTolerance">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/hold">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/inheritance">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/interceptor">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/location">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/operations">
                <include name="Test.ice" />
                <include name="TestAMD.ice" />
            </fileset>
            <fileset dir="test/Ice/proxy">
                <include name="Test.ice" />
                <include name="TestAMD.ice" />
            </fileset>
            <fileset dir="test/Ice/retry">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/servantLocator">
                <include name="Test.ice" />
                <include name="TestAMD.ice" />
            </fileset>
            <fileset dir="test/Ice/slicing/exceptions">
                <include name="Test.ice" />
                <include name="ServerPrivate.ice" />
                <include name="ServerPrivateAMD.ice" />
            </fileset>
            <fileset dir="test/Ice/slicing/objects">
                <include name="ServerPrivate.ice" />
                <include name="ServerPrivateAMD.ice" />
                <include name="ClientPrivate.ice" />
            </fileset>
            <fileset dir="test/Ice/timeout">
                <include name="Test.ice" />
            </fileset>
	    <fileset dir="test/IceSSL/configuration/">
                <include name="Test.ice" />
            </fileset>
	    <fileset dir="test/Slice/keyword/">
                <include name="Key.ice" />
            </fileset>
            <fileset dir="test/Ice/throughput">
                <include name="Throughput.ice" />
            </fileset>
        </slice2java>

        <slice2java stream="on" outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="test/Ice/objects">
                <include name="Test.ice" />
            </fileset>
            <fileset dir="test/Ice/stream">
                <include name="Test.ice" />
            </fileset>
        </slice2java>

        <slice2java checksum="test.Ice.checksum.Test.SliceChecksums" outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="test/Ice/checksum">
                <include name="Test.ice" />
                <include name="Types.ice" />
            </fileset>
        </slice2java>

        <slice2java outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
                <pathelement path="test/Ice/packagemd" />
            </includepath>
            <fileset dir="test/Ice/packagemd">
                <include name="Test.ice" />
                <include name="Package.ice" />
                <include name="NoPackage.ice" />
            </fileset>
        </slice2java>

        <slice2java checksum="test.Ice.checksum.server.Test.SliceChecksums" outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <meta value="${java2metadata}"/>
            <includepath>
                <pathelement path="${slice.dir}" />
            </includepath>
            <fileset dir="test/Ice/checksum">
                <include name="TestServer.ice" />
                <include name="TypesServer.ice" />
            </fileset>
        </slice2java>
    </target>

    <target name="custom-test-generate5" depends="test-generate">
        <!-- Create the output directory for generated code -->
        <mkdir dir="${generated.test.dir}"/>
        <slice2java outputdir="${generated.test.dir}" dependencyfile="${generated.test.dir}/.depend.Test">
            <fileset dir="test/Ice/custom15">
                <include name="Test.ice" />
            </fileset>
        </slice2java>
    </target>

    <target name="custom-test-generate" depends="custom-test-generate5"/>

    <target name="test-compile-generated" depends="ice-compile,test-generate,custom-test-generate">
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${cache.dir}"/>
        <depend srcdir="${generated.test.dir}" destdir="${lib.dir}" cache="${cache.dir}"/>
        <javac srcdir="${generated.test.dir}" destdir="${lib.dir}"
            source="1.5" debug="${debug}"
	    includes="**">
            <compilerarg value="${javac.lint}"/>
        </javac>
    </target>

    <target name="test-compile-base" depends="test-compile-generated">
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${cache.dir}"/>
        <depend srcdir="." destdir="${lib.dir}" cache="${cache.dir}"/>
        <javac srcdir="." destdir="${lib.dir}"
            source="1.5" debug="${debug}"
	    deprecation="on">

	    <include name="test/Util/"/>
	    <include name="test/Ice/adapterDeactivation/"/>
	    <include name="test/Ice/binding/"/>
	    <include name="test/Ice/exceptions/"/>
	    <include name="test/Ice/exceptionsAMD/"/>
	    <include name="test/Ice/checksum/"/>
	    <include name="test/Ice/facets/"/>
	    <include name="test/Ice/faultTolerance/"/>
	    <include name="test/Ice/hold/"/>
	    <include name="test/Ice/inheritance/"/>
	    <include name="test/Ice/interceptor/"/>
	    <include name="test/Ice/location/"/>
	    <include name="test/Ice/objects/"/>
	    <include name="test/Ice/operations/"/>
	    <include name="test/Ice/packagemd/"/>
	    <include name="test/Ice/proxy/"/>
	    <include name="test/Ice/proxyAMD/"/>
	    <include name="test/Ice/retry/"/>
	    <include name="test/Ice/servantLocator/"/>
	    <include name="test/Ice/servantLocatorAMD/"/>
	    <include name="test/Ice/slicing/exceptions/"/>
	    <include name="test/Ice/slicing/objects/"/>
	    <include name="test/Ice/stream/"/>
	    <include name="test/Ice/timeout/"/>
	    <include name="test/IceSSL/configuration/"/>
	    <include name="test/IceUtil/inputUtil/"/>
	    <include name="test/Slice/keyword/"/>
	    <include name="test/Ice/throughput/"/>
            <compilerarg value="${javac.lint}"/>
        </javac>
    </target>

    <target name="test-custom-compile5" depends="test-compile-generated">
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${cache.dir}"/>
        <depend srcdir="." destdir="${lib.dir}" cache="${cache.dir}"/>
        <javac srcdir="." destdir="${lib.dir}" debug="${debug}" source="1.5">
	    <include name="test/Ice/custom15/"/>
            <compilerarg value="${javac.lint}"/>
	</javac>
    </target>

    <target name="test-compile" depends="test-compile-base,test-custom-compile5"/>

    <target name="test-jar" depends="test-compile">
        <jar jarfile="${lib.dir}/IceTest.jar" basedir="${lib.dir}">
            <include name="test/**"/>
            <manifest>
                <attribute name="Built-By" value="ZeroC, Inc."/>
                <attribute name="Class-Path" value="IceAndroid.jar"/>
            </manifest>
        </jar>
    </target>

    <target name="compile" depends="ice-compile">
    </target>

    <target name="test" depends="test-compile, ice-compile">
    </target>

    <target name="jar" depends="ice-jar, test-jar"/>

    <target name="all" depends="jar">
        <ant inheritAll="false" dir="test"/>
        <ant inheritAll="false" dir="demo"/>
    </target>

    <target name="install-common">
        <mkdir dir="${prefix}"/>
        <mkdir dir="${prefix}/lib"/>
        <copy file="${top.dir}/../LICENSE" todir="${prefix}"/>
        <copy file="${top.dir}/../ICE_LICENSE" todir="${prefix}"/>
    </target>

    <target name="install-jar">
        <copy file="${lib.dir}/IceAndroid.jar" todir="${prefix}/lib"/>
        <copy file="${lib.dir}/IceTest.jar" todir="${prefix}/lib"/>
    </target>

    <target name="install" depends="jar, install-common, install-jar">
    </target>

    <target name="clean" depends="config-init">
        <delete dir="${generated.dir}"/>
        <delete dir="${generated.test.dir}"/>
        <delete deleteonexit="true" dir="${lib.dir}"/>
        <delete dir="${cache.dir}"/>
        <ant inheritAll="false" dir="test" target="clean"/>
    </target>

</project>
