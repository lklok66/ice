======================================================================
Requirements
======================================================================


Operating system
----------------

Ice Touch requires:

- Mac OS X 10.5.7 or later
- iPod touch v2 using software version 2.2.1, or 3.0
- iPhone 3G using software version 2.2.1 or 3.0

We expect Ice Touch will build successfully with iPhone SDK 2.0 and
run on iPhone OS 2.0, however, we did not test these versions.

Compiler
--------

Ice Touch requires:

- Xcode 3.1.3
- iPhone SDK for iPhone OS 3.0 (build 9M2736)


Slice translators
-----------------

You will need the Slice-to-ObjC compiler (slice2objc) and the
Slice-to-C++ compiler (slice2cpp). The distribution includes binaries
for these compilers as well as the source code in case you want to
build them yourself.


mcpp
----

Building the mcpp library is only necessary if you want to build the
Slice translators yourself.

The Slice-to-ObjC and Slice-to-C++ compilers (slice2objc/slice2cpp)
have a dependency on mcpp 2.7.2

We recommend downloading the Ice third-party source archive from

 http://www.zeroc.com/download.html

This archive contains the source distribution for mcpp (along with
other third-party dependencies for the full Ice distribution), as well
as required source patches and configuration instructions.

For more information about this dependency, please refer to the link
below:

 http://mcpp.sourceforge.net

XCode Plugin
------------

If you intent to develop with Xcode you will need the Xcode plugin.
To build the Xcode plugin

$ cd Xcode/Slice2ObjcPlugin
$ xcodebuild -configuration Release

To install the plugin either:

$ cp -r Xcode/Slice2ObjcPlugin/build/Release/slice2objcplugin.pbplugin \
    ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins

You may need to create this directory

or:

$ cp -r Xcode/Slice2ObjcPlugin/build/Release/slice2objcplugin.pbplugin \
    /Developer/Library/Xcode/Plug-ins


======================================================================
Compilation
======================================================================

Unpack the archive. The sources are contained in the IceTouch-@ver@
subdirectory.

Change the working directory to IceTouch-@ver@:

$ cd IceTouch-@ver@

Edit objc/config/Make.rules to establish your build configuration.
There are four possible build configurations:

* Build for Mac OS X

  - In objc/config/Make.rules, leave COMPILE_FOR_IPHONE and
    COMPILE_FOR_IPHONE_SIMULATOR unset

* Build for Cocoa

  - In objc/config/Make.rules, set COMPILE_FOR_COCOA=YES

* Build for the iPhone simulator

  - In objc/config/Make.rules, set COMPILE_FOR_IPHONE_SIMULATOR=YES

* Build for the iPhone or iPod touch

  - In objc/config/Make.rules, set COMPILE_FOR_IPHONE=YES

The Cocoa and iPhone SDKs are built with static libraries. The
simulator and MacOSX builds use dynamic libraries. We do not recommend
changing these settings.

Now you are ready to build Ice Touch:

$ make

This will build the Ice Touch library and tests. If you are building
for Mac OS X, this will also build the demos.

If you are building for Cocao, you should now use Xcode to build
the demos located following subdirectories:

  - objc/demo/Cocoa/chat
  - objc/demo/Cocoa/library

If you are building for iPhone or the iPhone simulator, you should
now use Xcode to build the demos and test suite GUI located in the
following subdirectories:

  - objc/demo/iPhone/chat
  - objc/demo/iPhone/library
  - objc/demo/iPhone/hello
  - objc/test/iPhone/container

Before building the iPhone demos you must set your iPhone Developer
Certificate private key identifier in the environment variable
IDENTIFIER. This environment variable must be accessible by the
build as well as by Xcode to sign the demo and test iPhone binaries.

/bin/bash: mt: command not found
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDENTIFIER</key>
	<string>iPhone Developer: Matthew Newhook</string>
</dict>
</plist>

You must log out and log in again for the changes to take effect.
Please see http://developer.apple.com/qa/qa2001/qa1067.html for
more information on this file.

After a successful build, you can run the test suite.

Under Mac OS X, run:

$ cd objc
$ python allTests.py

If everything works, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

For the iPhone or iPhone simulator, the test suite runs within an
iPhone application named "Test Suite", located in the directory
objc/test/iPhone/container.


======================================================================
Installation
======================================================================

For the Mac OS X build, simply run "make install" to install Ice
Touch in the directory specified by the "prefix" variable in
objc/config/Make.rules.

For the Cocoa/iPhone and iPhoneSimulator builds the copy the contents
of objc/SDK to either /Developer/SDKs, or ~/Library/SDKs.

For Mac OS X builds of Ice Touch, the install name of the shared
library is /opt/IceTouch-@mmver@/lib.
