#!/bin/bash
# **********************************************************************
#
# Copyright (c) 2003-2007 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

BASEDIR=`pwd`

#
# Location where working archive is created.
#
WORKINGDIR=$HOME/tmp

#
# Used to naming the archive.
#
LABEL="HEAD" 

#
# The 'tree-ish' arg to the git-archive command.
#
REFSPEC="HEAD"

#
# Set to 1 to keep working files around.
#
KEEP=0

usage()
{
    echo "makedist [-d working-directory] [-n archive-name] [-t tag] [-M] [-h] [-k]"
    echo ""
    echo " -d Indicate the working directory. 'makedist' will create"
    echo "    the source archive in this directory. Defaults to "
    echo "    \$HOME/tmp"
    echo ""
    echo " -n Specify a name and prefix for the source archive."
    echo "    Defaults to HEAD"
    echo ""
    echo " -t Specify which branch or tag to base the archive on."
    echo "    If 'tag' is a branch, the archive will be created from"
    echo "    'tag'/HEAD. Defaults to HEAD of the current branch"
    echo ""
    echo " -M Skip running the makedist.py files."
    echo ""
    echo " -k Don't clean up working files when finished"
    echo ""
    echo " -h Display this message."
    
    return 0
}

validopts="d:n:t:hMk"
getopts $validopts curopt
runmakedist=1
while test ! "x$curopt" == "x:" ;
do
   case $curopt in
   	d)
	    WORKINGDIR=$OPTARG
	    if test ! -d $WORKINGDIR;
	    then
		echo "$WORKINGDIR does not exist!"
		exit 1
	    fi
	;;
	
	n)
	    LABEL=$OPTARG
	;;

	t)
	    REFSPEC=$OPTARG
	;;

	h)
	   usage
	   exit 0
	;;

	M)
	   runmakedist=0
	;;

	k)
	   keep=1
	;;
   esac
   getopts $validopts curopt
   [ "$?" -gt 0 ] && break
done

echo "Creating $WORKINGDIR/$LABEL with $REFSPEC"

[ -d $WORKINGDIR/$LABEL ] && rm -rf $LABEL
git archive --prefix="$LABEL/" $REFSPEC | ( cd $WORKINGDIR && tar xf - )
[ "$runmakedist" -eq "0" ] && { echo "Skipping makedist.py step on user's request" ;  exit 0 ; }

echo "Walking directories and creating source distributions"
cd $WORKINGDIR/$LABEL

ICEVER=`awk "/.*ICE_STRING_VERSION.*/ { print \\$3 }" cpp/include/IceUtil/Config.h | sed -e s/\"//g`
SOURCEDIR="$BASEDIR/../dist-$ICEVER"
[ ! -d $SOURCEDIR ] && mkdir $SOURCEDIR

currentdir=`pwd`
#
# The person creating the source distribution must have:
#   jdk 1.5 installed
#   jdk 1.4 installed
#   a utility named java_env to switch between the two
#
# There currently isn't a cross-platfrom standard java_env
# utility. So it's up to the developer to have something suitable in
# their path. A simple example follows:
#
# case $1 in
#   1.4) JAVA_HOME=/usr/java/j2sdk1.4.2_13;;
#   1.5) JAVA_HOME=/usr/java/jdk1.5.0_12 ;;
#   *) echo "Unsupported" && exit 1;;
# esac
# export PATH=$JAVA_HOME/bin:$PATH
# export JAVA_HOME
#
# Other options exist such as update-alternatives on linux and
# java_select on MacOS X, but they require sudo or Administrator
# access, which isn't otherwise necessary for this process.

source java_env 1.4
for f in `find . -maxdepth 1 -name "*" -type d` ;
do
   cd $currentdir/$f
   python makedist.py
   cp dist/* $SOURCEDIR
done

source java_env 1.5
cd $currentdir/java
python makedist.py
cp dist/* $SOURCEDIR
 
cd $currentdir


cp $currentdir/cpp/makebindist.py $SOURCEDIR

# Cleanup
[ "$keep" -eq "1" ] && echo "Cleaning up working files..." && cd $WORKINGDIR && rm -rf $LABEL
cd $BASEDIR
echo "Source distributions can be found in $SOURCEDIR"
