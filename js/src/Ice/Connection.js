// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Connection.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

var __ice_Object = require("./Object");
var __ice_ObjectPrx = require("./ObjectPrx");
var __ice_HashMap = require("./HashMap");
var __ice_HashUtil = require("./HashUtil");
var __ice_ArrayUtil = require("./ArrayUtil");

var Ice = (function(_mod_Ice, undefined)
{

    /// <summary>
    /// Base class providing access to the connection details.
    /// </summary>
    
    _mod_Ice.ConnectionInfo = function(incoming, adapterName, connectionId)
    {
        this.incoming = incoming !== undefined ? incoming : false;
        this.adapterName = adapterName !== undefined ? adapterName : null;
        this.connectionId = connectionId !== undefined ? connectionId : null;
    }

    _mod_Ice.ConnectionInfo.prototype.toString = function()
    {
        return "[object Ice::ConnectionInfo]";
    }

    /// <summary>
    /// The user-level interface to a connection.
    /// </summary>
    
    _mod_Ice.Connection = function()
    {
    }
    _mod_Ice.Connection.prototype.close = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.createProxy = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.setAdapter = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.getAdapter = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.getEndpoint = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.flushBatchRequests = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.type = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.timeout = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.toString = __ice_Object.prototype.__notImplemented;
    _mod_Ice.Connection.prototype.getInfo = __ice_Object.prototype.__notImplemented;

    _mod_Ice.Connection.prototype.toString = function()
    {
        return "[object Ice::Connection]";
    }

    /// <summary>
    /// Provides access to the connection details of an IP connection
    /// 
    /// </summary>
    
    _mod_Ice.IPConnectionInfo = function(incoming, adapterName, connectionId, localAddress, localPort, remoteAddress, remotePort)
    {
        _mod_Ice.ConnectionInfo.call(this, incoming, adapterName, connectionId);
        this.localAddress = localAddress !== undefined ? localAddress : "";
        this.localPort = localPort !== undefined ? localPort : -1;
        this.remoteAddress = remoteAddress !== undefined ? remoteAddress : "";
        this.remotePort = remotePort !== undefined ? remotePort : -1;
    }
    _mod_Ice.IPConnectionInfo.prototype = new _mod_Ice.ConnectionInfo();
    _mod_Ice.IPConnectionInfo.prototype.constructor = _mod_Ice.IPConnectionInfo;

    _mod_Ice.IPConnectionInfo.prototype.toString = function()
    {
        return "[object Ice::IPConnectionInfo]";
    }

    /// <summary>
    /// Provides access to the connection details of a TCP connection
    /// 
    /// </summary>
    
    _mod_Ice.TCPConnectionInfo = function(incoming, adapterName, connectionId, localAddress, localPort, remoteAddress, remotePort)
    {
        _mod_Ice.IPConnectionInfo.call(this, incoming, adapterName, connectionId, localAddress, localPort, remoteAddress, remotePort);
    }
    _mod_Ice.TCPConnectionInfo.prototype = new _mod_Ice.IPConnectionInfo();
    _mod_Ice.TCPConnectionInfo.prototype.constructor = _mod_Ice.TCPConnectionInfo;

    _mod_Ice.TCPConnectionInfo.prototype.toString = function()
    {
        return "[object Ice::TCPConnectionInfo]";
    }

    /// <summary>
    /// Provides access to the connection details of a UDP connection
    /// 
    /// </summary>
    
    _mod_Ice.UDPConnectionInfo = function(incoming, adapterName, connectionId, localAddress, localPort, remoteAddress, remotePort, mcastAddress, mcastPort)
    {
        _mod_Ice.IPConnectionInfo.call(this, incoming, adapterName, connectionId, localAddress, localPort, remoteAddress, remotePort);
        this.mcastAddress = mcastAddress !== undefined ? mcastAddress : null;
        this.mcastPort = mcastPort !== undefined ? mcastPort : -1;
    }
    _mod_Ice.UDPConnectionInfo.prototype = new _mod_Ice.IPConnectionInfo();
    _mod_Ice.UDPConnectionInfo.prototype.constructor = _mod_Ice.UDPConnectionInfo;

    _mod_Ice.UDPConnectionInfo.prototype.toString = function()
    {
        return "[object Ice::UDPConnectionInfo]";
    }

    return _mod_Ice;
}(Ice || {}));

module.exports.Ice = Ice;
