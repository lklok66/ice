This demo illustrates how to invoke ordinary (twoway) operations, as
well as how to make oneway and batched invocations.

To run the demo, first you need to start the Ice hello server, you
can use the Python or C++ server, follow the instructions from the
demo README to start it:

 * To use the Python server you need a python installation compatible
   with Ice for Python module included in Ice 3.5.1
   
 * To use the C++ server you need a C++ compiler compatible with Ice
   3.5.1 C++ distribution.

In a separate window, start the client:

$ node Client.js

To test timeouts you can use 'T' to set a timeout on the client proxy
and 'P' to set a delayed response in the server to cause a timeout.
You will notice that two "Hello World!" messages will be printed by
the server in this case. This is because the sayHello method is marked
as idempotent in the slice, meaning that Ice does not need to follow
the at-most-once retry semantics. See the manual for more information
about retry behavior.
