<!--
 **********************************************************************

 Copyright (c) 2003-2008 ZeroC, Inc. All rights reserved.

 This copy of Ice-E is licensed to you under the terms described in the
 ICEE_LICENSE file included in this distribution.

 **********************************************************************
-->

<project name="common" basedir=".">

    <!-- get access to env variables globally -->
    <property environment="env"/>

    <target name="init" depends="config-init, task-init">
      <!-- Create the time stamp -->
      <tstamp/>
    </target>

    <property file="${top.dir}/config/build.properties"/>

    <!-- Commonly needed properties -->
    <property name="class.dir" value="classes"/>
    <property name="midp.class.dir" value="midp"/>
    <property name="generated.dir" value="generated"/>

    <!-- We use pathconvert to ensure that ice.top.dir is relative to the path of the build.xml
         file insead of the current working directory. -->
    <pathconvert property="ice.top.dir">
      <path location="${top.dir}"/>
    </pathconvert>

    <condition property="slice.translator" value="slice2javae.exe" else="slice2javae">
      <os family="windows"/>
    </condition>

    <fail message="Unable to find ${slice.translator} in ${icee.home}, please verify icee.home is properly configured and Ice-E is correctly installed.">
        <condition>
            <and>
                <isset property="icee.home"/>
                <not><available file="${icee.home}/bin/${slice.translator}"/></not>
            </and>
        </condition>
    </fail>
    <fail message="Unable to find ${slice.translator} in ${env.ICEE_HOME}, please verify ICEE_HOME is properly configured and Ice-E is correctly installed.">
        <condition>
            <and>
                <not><isset property="icee.home"/></not>
                <isset property="env.ICEE_HOME"/>
                <not><available file="${env.ICEE_HOME}/bin/${slice.translator}"/></not>
            </and>
        </condition>
    </fail>

    <condition property="ice.bin.dist">
        <or>
           <equals arg1="${use.bin.dist}" arg2="yes"/>
           <equals arg1="${env.USE_BIN_DIST}" arg2="yes"/>
        </or>
    </condition>

    <!-- First, check if we're building a source distribution. -->

    <condition property="ice.dir" value="${ice.top.dir}/..">
        <and>
            <!-- Don't just look for ${ice.top.dir}/../javae - we want to make sure we are really
                 in a source distribution. -->
            <available file="${ice.top.dir}/../javae/src/Ice/Util.java"/>
            <not><isset property="ice.bin.dist"/></not>
        </and>
    </condition>
    <!-- When building a source distribution, we allow using either the
         translators from a binary distribution or the local translators, -->
    <condition property="ice.cpp.dir" value="${icee.home}">
        <and>
            <isset property="ice.dir"/>
            <not><isset property="ice.cpp.dir"/></not>
            <available file="${icee.home}/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.cpp.dir" value="${env.ICEE_HOME}" else="${ice.dir}/cpp">
        <and>
            <isset property="ice.dir"/>
            <not><isset property="ice.cpp.dir"/></not>
            <available file="${env.ICEE_HOME}/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.warn.duplicate.translator">
        <and>
             <isset property="ice.cpp.dir"/>
             <not><equals arg1="${ice.cpp.dir}" arg2="${ice.dir}/cpp"/></not>
             <available file="${ice.dir}/cpp/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.src.dist">
        <and>
            <isset property="ice.dir"/>
        </and>
    </condition>

    <!-- Then, check if we're building against a binary distribution. -->

    <condition property="ice.dir" value="${icee.home}">
        <and>
          <not><isset property="ice.dir"/></not>
          <isset property="icee.home"/>
        </and>
    </condition>
    <condition property="ice.dir" value="${env.ICEE_HOME}">
        <and>
          <not><isset property="ice.dir"/></not>
          <isset property="env.ICEE_HOME"/>
        </and>
    </condition>
    <condition property="ice.dir" value="${ice.top.dir}">
        <and>
          <not><isset property="ice.dir"/></not>
          <available file="${ice.top.dir}/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.dir" value="/usr">
        <and>
          <not><isset property="ice.dir"/></not>
          <available file="/usr/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.dir" value="C:\IceE-${icee.version}">
        <and>
            <os family="windows"/>
            <not><isset property="ice.dir"/></not>
            <available file="C:\IceE-${icee.version}\bin\${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.dir" value="/opt/IceE-${icee.version}">
        <and>
            <not><os family="windows"/></not>
            <not><isset property="ice.dir"/></not>
            <available file="/opt/IceE-${icee.version}/bin/${slice.translator}"/>
        </and>
    </condition>
    <condition property="ice.bin.dist">
        <and>
            <not><isset property="ice.src.dist"/></not>
            <isset property="ice.dir"/>
        </and>
    </condition>
    <fail message="Unable to find a valid Ice-E distribution, please verify ICEE_HOME is properly configured and Ice-E is correctly installed.">
        <condition>
            <not><or>
              <isset property="ice.src.dist"/>
              <isset property="ice.bin.dist"/>
            </or></not>
        </condition>
    </fail>

    <!-- Set icee.home for the ant Slice tasks or ensure it's properly set by the user. -->
    <condition property="icee.home" value="${ice.dir}">
        <isset property="ice.bin.dist"/>
    </condition>
    <condition property="icee.home" value="${ice.cpp.dir}">
        <isset property="ice.src.dist"/>
    </condition>

    <available property="wtkfound" file="${WTK}" type="dir"/>
    <fail if="midp" unless="wtkfound" message="WTK directory (${WTK}) does not exist"/>

    <path id="wtklibs">
	<pathelement location="${CLDCLIB}"/>
	<pathelement location="${MIDPLIB}"/>
    </path>

    <property name="WTKLIBS" refid="wtklibs"/>

    <condition property="hasProguard">
	<available classname="proguard.ant.ProGuardTask" classpath="${env.CLASSPATH}"/>
    </condition>

    <condition property="hasProguardAndMIDP">
	<and>
	    <isset property="hasProguard"/>
	    <isset property="midp"/>
	</and>
    </condition>

    <target name="config-init-warn" if="ice.warn.duplicate.translator">
        <echo message="Found ${slice.translator} in both ${ice.cpp.dir}/bin and ${ice.dir}/cpp/bin, ${ice.cpp.dir}/bin/${slice.translator} will be used!" level="warning"/>
    </target>

    <target name="config-init" depends="config-init-warn">

        <!-- Set slice.dir to the directory containing the Slice files. -->
        <condition property="slice.dir" value="/usr/share/IceE-${icee.version}/slice" else="${ice.dir}/slice">
            <equals arg1="${ice.dir}" arg2="/usr"/>
        </condition>
	<property name="lib.dir" value="${ice.dir}/javae/lib" />
	<property name="jdk.lib.dir" value="${lib.dir}/jdk" />
	<property name="midp.lib.dir" value="${lib.dir}/midp" />

        <condition property="dist.lib.dir" value="${lib.dir}">
            <isset property="ice.src.dist"/>
        </condition>
        <condition property="dist.lib.dir" value="${ice.dir}/lib">
            <and>
                <isset property="ice.bin.dist"/>
                <not><equals arg1="${ice.dir}" arg2="/usr"/></not>
            </and>
        </condition>
        <condition property="dist.lib.dir" value="/usr/share/java">
            <and>
                <isset property="ice.bin.dist"/>
                <equals arg1="${ice.dir}" arg2="/usr"/>
            </and>
        </condition>

        <condition property="jdk.jarfile" value="${dist.lib.dir}/IceE-${icee.version}.jar">
            <and>
                <not><isset property="jdk.jarfile"/></not>
                <available file="${dist.lib.dir}/IceE-${icee.version}.jar"/>
            </and>
        </condition>

        <condition property="jdk.jarfile" value="${dist.lib.dir}/IceE.jar">
            <and>
                <not><isset property="jdk.jarfile"/></not>
                <available file="${dist.lib.dir}/IceE.jar"/>
            </and>
        </condition>

        <condition property="midp.jarfile" value="${dist.lib.dir}/IceE-midp-${icee.version}.jar">
            <and>
                <not><isset property="midp.jarfile"/></not>
                <available file="${dist.lib.dir}/IceE-midp-${icee.version}.jar"/>
            </and>
        </condition>

        <condition property="midp.jarfile" value="${dist.lib.dir}/IceE-midp.jar">
            <and>
                <not><isset property="midp.jarfile"/></not>
                <available file="${dist.lib.dir}/IceE-midp.jar"/>
            </and>
        </condition>

        <path id="jdk.classpath">
            <fileset file="${jdk.jarfile}"/>
        </path>
        <path id="midp.bootclasspath" path="${WTKLIBS}"/>
        <path id="midp.classpath">
            <fileset file="${midp.jarfile}"/>
        </path>
    </target>

    <!-- Install the Slice ant tasks. -->
    <target name="task-init">

        <condition property="task.jar.file" value="${dist.lib.dir}/ant-icee-${icee.version}.jar">
            <available file="${dist.lib.dir}/ant-icee-${icee.version}.jar"/>
        </condition>

        <condition property="task.jar.file" value="${dist.lib.dir}/ant-icee.jar">
            <and>
                <not><isset property="task.jar.file"/></not>
                <available file="${dist.lib.dir}/ant-icee.jar"/>
            </and>
        </condition>

        <taskdef name="slice2javae" classpath="${task.jar.file}" classname="Slice2JavaETask"/>
	<taskdef name="jadfile" classpath="${task.jar.file}" classname="JADTask"/>

    </target>

</project>
